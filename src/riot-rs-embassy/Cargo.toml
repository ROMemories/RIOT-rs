[package]
name = "riot-rs-embassy"
version = "0.1.0"
edition = "2021"

[lints]
workspace = true

[dependencies]
critical-section.workspace = true
linkme.workspace = true
static_cell.workspace = true

embassy-executor = { workspace = true, features = ["nightly"] }
embassy-futures = { workspace = true }
embassy-net = { workspace = true, optional = true, features = [
  "dhcpv4",
  "medium-ethernet",
] }
embassy-net-driver-channel = { workspace = true, optional = true }
embassy-sync = { workspace = true }
embassy-time = { workspace = true, optional = true }
embassy-usb = { workspace = true, optional = true }

riot-rs-threads = { path = "../riot-rs-threads" }
riot-rs-debug = { workspace = true }
riot-rs-rt = { path = "../riot-rs-rt" }
riot-rs-saga = { path = "../riot-rs-saga" }
riot-rs-utils = { path = "../riot-rs-utils" }

fixed = "1.24.0"
heapless = "0.8.0"
once_cell = { version = "1.19.0", default-features = false, features = [
  "critical-section",
] }

# rpi-pico-w cyw43
cyw43 = { version = "0.1.0", features = ["firmware-logs"], optional = true }
cyw43-pio = { version = "0.1.0", features = ["overclock"], optional = true }

[target.'cfg(context = "cortex-m")'.dependencies]
embassy-executor = { workspace = true, features = [
  "arch-cortex-m",
  "executor-interrupt",
] }

[target.'cfg(context = "nrf")'.dependencies]
embassy-nrf = { workspace = true, features = [
  "time-driver-rtc1",
  "time",
  "unstable-pac",
  "rt",
] }

[target.'cfg(context = "nrf52832")'.dependencies]
embassy-nrf = { workspace = true, features = ["nrf52832"] }

[target.'cfg(context = "nrf52840")'.dependencies]
embassy-nrf = { workspace = true, features = ["nrf52840"] }

[target.'cfg(context = "nrf5340")'.dependencies]
embassy-nrf = { workspace = true, features = ["nrf5340-app-s"] }

[target.'cfg(context = "rp2040")'.dependencies]
embassy-rp = { workspace = true, features = [
  "rt",
  "time-driver",
  "unstable-pac",
  #  "unstable-traits",
] }

[target.'cfg(context = "esp")'.dependencies]
esp-hal = { workspace = true, features = [
  "embassy",
  "embassy-executor-thread",
  "embassy-time-driver",
  "embassy-time-timg0",
  "rt",
  "vectored",
] }
esp-wifi = { workspace = true, features = [
  "async",
  "embassy-net",
  "wifi",
], optional = true }

[target.'cfg(context = "esp32c3")'.dependencies]
esp-hal = { workspace = true, features = ["esp32c3"] }
esp-wifi = { workspace = true, features = ["esp32c3"], optional = true }

[target.'cfg(context = "esp32c6")'.dependencies]
esp-hal = { workspace = true, features = ["esp32c6"] }
esp-wifi = { workspace = true, features = ["esp32c6"], optional = true }

[features]
time = ["dep:embassy-time", "embassy-executor/integrated-timers"]
usb = ["dep:embassy-usb"]
# embassy-net requires embassy-time and support for timeouts in the executor
net = ["dep:embassy-net", "time"]
usb-ethernet = ["usb", "net"]

wifi = []
wifi-cyw43 = [
  "dep:cyw43",
  "dep:cyw43-pio",
  "dep:embassy-net-driver-channel",
  "net",
  "wifi",
]
wifi-esp = ["dep:esp-wifi", "dep:embassy-net-driver-channel", "net", "wifi"]

internal-temp = []

threading = []
override-network-config = []
override-usb-config = []

executor-single-thread = []
executor-interrupt = []
