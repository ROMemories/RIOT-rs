[package]
name = "riot-rs-embassy"
version = "0.1.0"
edition = "2021"

[dependencies]
# always
linkme.workspace = true
static_cell.workspace = true
critical-section.workspace = true
embassy-sync = { workspace = true }
riot-rs-core = { path = "../riot-rs-core", optional = true }
riot-rs-rt = { path = "../riot-rs-rt" }

# time
embassy-time = { workspace = true, optional = true }

embassy-usb = { workspace = true, optional = true }
embassy-net = { workspace = true, optional = true, features = [ "dhcpv4", "medium-ethernet" ] }
heapless = "0.8.0"
usbd-hid = { version = "0.6.1", optional = true }
konst = { version = "0.3.8" }

[target.'cfg(context = "cortex-m")'.dependencies]
embassy-executor = { workspace = true, features = [
  "arch-cortex-m",
  "executor-interrupt",
  "nightly",
] }

[target.'cfg(context = "nrf52")'.dependencies]
embassy-nrf = { workspace = true, features = [
  "time-driver-rtc1",
  "time",
  "unstable-pac",
  "rt",
] }

[target.'cfg(context = "nrf52832")'.dependencies]
embassy-nrf = { workspace = true, features = [
  "nrf52832",
] }

[target.'cfg(context = "nrf52840")'.dependencies]
embassy-nrf = { workspace = true, features = [
  "nrf52840",
] }

[target.'cfg(context = "rp2040")'.dependencies]
embassy-rp = { workspace = true, features = [
  "rt",
  "time-driver",
  "unstable-pac",
#  "unstable-traits",
] }

[features]
time = ["dep:embassy-time", "embassy-executor/integrated-timers"]
usb = [ "dep:embassy-usb" ]
net = [ "dep:embassy-net" ]
usb_ethernet = [ "usb", "net" ]
usb_hid = ["usb", "dep:usbd-hid", "embassy-usb/usbd-hid"]

threading = ["dep:riot-rs-core"]
override_network_config = []
